%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.6 (Build 15G31) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 193 48
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 193 48
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
q
0 0 193 48 rc
191 0 0 44 0 2 cm
BI
/Width 573
/Height 132
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcEmmJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcEmmJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcEmmbQ!.m\,LsXJc:6"Jc:6"Jc:6"Jc:6"Jc:6"mf)&BfDkjLrr)`lJbuqR
Jbt#qJbt#qJbt#qJbt#qJbt#qJc"m4qu$Hlrr20^gAh0Nrql]jrqHEcrq1j7](CRGJb4NcJb4NcJb4Nc
Jb4NcJb4NcnauhRrq??crqZQjrr)3`h>dKQrqcWfrpp'Vrp>:%\*AP0Ja.gOJa.gOJa.gOJa.gOJa.gO
mcsf=rpKdVrq??frr)<ci;`fTrqcWdrpKdKro3q7rndY1J_[roJ_Yh3J_Yh3J_Yh3J_Yh3J_Yh3J_]nQ
rn[S1rnm_7roa:Krq-3drr)Efj8],Xrql]frp9XDrnIG%rmC_kJ^1jPJ^/hlJ^/hlJ^/hlJ^/hlJ^/hl
J^3f2rm1Skrm^r%ro3qDrq69frr2Tjj8],WrqQK[ro!e+rlkA\rkeZMJ\J_0J\H]LJ\H]LJ\H]LJ\H]L
J\H]LJ\LZgrkSNMrl+l\rmh#+rpB^[rr)Nij8],Urq$-Mrmh"hrkABBqm:p\]!HsoJ[9p6J[9p6J[9p6
J[9p6J[9p6n[&,"rji$BrlG)hroF(MrqlBgj8],TrpKdArlY5Qrj;[.JZZ;]JZXL*JZXL*JZXL*JZXL*
JZXL*JZ\7?ric=.rk/6Qrn[SArqc<fj8],QrosF3rkeZBric=&ql>:J\uL=]JZ=:$JZ=:$JZ=:$JZ=:$
JZ=:$nZ)JeriH+&rjDaBrm^r3rqH*ck5YGZrq69Orm1SVriuI(ri:UM[&S\WJZ=:$JZ=:$JZ=:$JZ=:$
JZ=:$l`0rbriH+(rk/6VroF(Orr)Wlk5YGZrq-3Krlb;Oric=%JZ>uTJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$
JZ@q6ri?%%rji$Oro*kKrr)Wlk5YGZrq$-HrlP/LriZ7$JZ>uTJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$JZ@q6
ri?%$rj_sLrnm_Hrr)Wlk5YGYrq$-GrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJ
rndYGrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQk
k5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'F
rlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgP
Y,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$
JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$
JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$
jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJ
rndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQk
k5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'F
rlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgP
Y,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$
JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$
JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$
jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJ
rndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQk
k5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'F
rlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgP
Y,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$
JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$
JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$
jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJ
rndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQk
k5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'F
rlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgP
Y,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$
JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$
JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$
jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJ
rndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQk
k5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'F
rlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgP
Y,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$
JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$
JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$
jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJ
rndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQk
k5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'F
rlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgP
Y,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$
JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$
JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$
jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJ
rndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQk
k5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'F
rlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgP
Y,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$
JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$
JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$
jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJ
rndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQk
k5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'F
rlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgP
Y,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$
JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$
JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$
jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJ
rndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQk
k5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'F
rlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgP
Y,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$
JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$
JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$
jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJ
rndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQk
k5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'F
rlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgP
Y,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$
JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$
JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$
jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJ
rndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQk
k5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'F
rlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgP
Y,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$
JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$
JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$
jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJ
rndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQk
k5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'F
rlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgP
Y,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$
JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$
JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$
jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJ
rndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQk
k5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'F
rlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgP
Y,[&QJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$
JZ=:$JZ=:$JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGYrpp'FrlG)JriUgPY,[&QJZ=:$JZ=:$JZ=:$
JZ=:$JZ=:$jf8<_rjVmJrndYFrquQkk5YGZrpp'GrlG)KriZ7$JZ>uTJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$
JZ@q6ri?%$rj_sKrnm_Grr)Wlk5YGZrq$-IrlY5MriZ7$JZ>uTJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$JZ@q6
ri?%$rj_sMro!eIrr)Wlk5YGZrq-3Krlb;Oric4"JZ?)WJZ=:$JZ=:$JZ=:$JZ=:$JZ=:$JZA%9qlB_"
rji$Oro*kKrr)Wlk5YG[rq69Orm(MUriuI)poAtG\uL=]JZ=:$JZ=:$JZ=:$JZ=:$JZ=:$nZ)AbriQ1)
rk/6UroF(Orr2]mk5YG[rqHEUrm^q`rjDa/riC[O[&\bYJZF@&JZF@&JZF@&JZF@&JZF@&l`:#dric=/
rk\T`roj@Urr2]mk5YG[rqZQ\rnIFork/6;riq$W['"t_JZaR,JZaR,JZaR,JZaR,JZaR,l`U5lrj;[;
rlP/orpB^\rr2]mj8],Urq$-MrmUkcrk/6>rjMg5J[;qoJ[9p6J[9p6J[9p6J[9p6J[9p6J[=mQrj;[5
rjVm>rl+lcroF(MrqlBgj8],WrqHEZrndY%rlG)TrkJHGJ\8S,J\6QHJ\6QHJ\6QHJ\6QHJ\6QHJ\:Nc
rk8<Grk\TTrmC`%rpB^Zrr)Nij8],Xrql]erp0R@rmq(prlb;_J]PFDJ]ND`J]ND`J]ND`J]ND`J]ND`
J]RB&rlP/_rm1Spro!eArq-3err2Tji;`fUrqcWdrpB^Iro!e2rn2kT]%DSdJ_5P+J_5P+J_5P+J_5P+
J_5P+n_!iornRM2roX4Irq-3drr2Kgh>dKRrql]hrq$-Xrp9XLJa'c1Ja%aMJa%aMJa%aMJa%aMJa%aM
Ja)^hrp'LLrpTjXrqHEhrr2BdgAh0Orr)inrqZQgqtG[8^%R$NJbFZgJbFZgJbFZgJbFZgJbFZgo_/1V
rqQKgrql]nrr29adJs+CJc3(VJc1/uJc1/uJc1/uJc1/uJc1/uJc5$8qu5XUJ,
~> %APLeod
EI
Q
0.60000002 i
1 1 1 sc
q
5.9989676 44 m
4.8949685 44 4 43.108459 4 42.002708 c
4 5.9972916 l
4 4.894218 4.8869395 4 5.9989676 4 c
187.00104 4 l
188.10503 4 189 4.8915401 189 5.9972916 c
189 42.002708 l
189 43.105782 188.11307 44 187.00104 44 c
5.9989676 44 l
h
W*
0 0 193 48 rc
-1 49 m
194 49 l
194 -1 l
-1 -1 l
h
f
Q
0.98823529 0.29803923 0.0078431377 sc
q
160.01556 29.275618 m
157.57364 24.306358 l
155.13019 29.275618 l
151.53876 29.275618 l
157.57364 17 l
163.6042 29.275618 l
160.01556 29.275618 l
h
140.16734 24.936644 m
140.16734 25.310022 140.03847 25.58873 139.78241 25.768749 c
139.52733 25.950348 139.17885 26.040571 138.74257 26.040571 c
137.10808 26.040571 l
137.10808 23.779926 l
138.72601 23.779926 l
139.17455 23.779926 139.52733 23.879189 139.78241 24.077139 c
140.03847 24.275518 140.16734 24.5515 140.16734 24.903364 c
140.16734 24.936644 l
h
149.17546 30 m
155.20853 17.724382 l
151.61711 17.724382 l
149.17546 22.693928 l
146.73521 17.724382 l
144.29774 17.724382 l
143.1456 17.724382 l
140.02275 17.724382 l
137.90828 21.024694 l
137.87781 21.024694 l
137.10808 21.024694 l
137.10808 17.724382 l
133.36079 17.724382 l
133.36079 29.275618 l
138.83846 29.275618 l
139.84169 29.275618 140.66624 29.157135 141.31155 28.920599 c
141.95866 28.684494 142.47775 28.361893 142.87299 27.954805 c
143.21533 27.603802 143.47125 27.206612 143.64297 26.768253 c
143.81262 26.327887 143.8989 25.809057 143.8989 25.217503 c
143.8989 25.182503 l
143.8989 24.336195 143.70129 23.620707 143.30508 23.038189 c
142.91139 22.455097 142.37241 21.991636 141.68771 21.651823 c
143.63533 18.721159 l
149.17546 30 l
h
165.96693 30 m
159.93457 17.724382 l
163.52599 17.724382 l
165.96693 22.693928 l
168.40955 17.724382 l
172 17.724382 l
165.96693 30 l
h
122.48759 26.010019 m
125.78635 26.010019 l
125.78635 17.724382 l
129.53433 17.724382 l
129.53433 26.010019 l
132.83392 26.010019 l
132.83392 29.275618 l
122.48759 29.275618 l
122.48759 26.010019 l
h
122.3526 22.939358 m
122.58152 22.532269 122.69661 22.03639 122.69661 21.454447 c
122.69661 21.420593 l
122.69661 20.81613 122.57985 20.270475 122.34383 19.787077 c
122.10962 19.302387 121.77785 18.893003 121.35117 18.556919 c
120.92352 18.221981 120.4054 17.963642 119.79739 17.781759 c
119.18966 17.599157 118.50511 17.508072 117.74847 17.508072 c
116.60677 17.508072 115.54091 17.67174 114.55325 17.995344 c
113.56574 18.320814 112.71503 18.807655 112 19.455296 c
114.00119 21.91346 l
114.60906 21.430204 115.25089 21.083218 115.92222 20.87451 c
116.59452 20.665373 117.26251 20.560802 117.92438 20.560802 c
118.26659 20.560802 118.51124 20.60527 118.66097 20.692196 c
118.81169 20.780556 118.8849 20.901907 118.8849 21.055246 c
118.8849 21.088095 l
118.8849 21.254631 118.77425 21.39377 118.5566 21.501925 c
118.33895 21.611801 117.9287 21.7267 117.33126 21.847477 c
116.70168 21.980448 116.10076 22.135221 115.53033 22.310652 c
114.95906 22.48522 114.45751 22.711859 114.02554 22.98741 c
113.59288 23.261671 113.24886 23.609518 112.99197 24.027222 c
112.7359 24.445641 112.60787 24.957729 112.60787 25.562193 c
112.60787 25.595472 l
112.60787 26.146145 112.71155 26.658234 112.92043 27.130732 c
113.12682 27.603802 113.43172 28.017202 113.83224 28.368204 c
114.23289 28.720497 114.73013 28.995047 115.32311 29.194429 c
115.91359 29.39238 116.59452 29.491068 117.36438 29.491068 c
118.45209 29.491068 119.40481 29.358671 120.22157 29.093735 c
121.03847 28.831665 121.77172 28.435049 122.42399 27.907183 c
120.5987 25.298691 l
120.06487 25.696024 119.50153 25.984631 118.90925 26.166658 c
118.31543 26.348541 117.75974 26.439627 117.23551 26.439627 c
116.95857 26.439627 116.75317 26.395592 116.61985 26.30723 c
116.48402 26.219158 116.41959 26.103113 116.41959 25.960817 c
116.41959 25.927971 l
116.41959 25.772623 116.51965 25.640656 116.72353 25.53035 c
116.92726 25.420902 117.32166 25.305002 117.90781 25.183937 c
118.62354 25.052832 119.27414 24.892607 119.8628 24.706705 c
120.44882 24.517792 120.95483 24.279535 121.37538 23.987345 c
121.79705 23.695726 122.12354 23.347879 122.3526 22.939358 c
122.3526 22.939358 l
h
W*
0 0 193 48 rc
107 35 m
177 35 l
177 12 l
107 12 l
h
f
Q
0.60000002 0.60000002 0.60000002 sc
q
27 22.836 m
28.736 22.486 l
28.623999 21.384661 28.22267 20.493338 27.532 19.812 c
26.84133 19.130663 25.950005 18.790001 24.858 18.790001 c
23.616661 18.790001 22.601671 19.223995 21.813 20.091999 c
21.02433 20.960005 20.629999 22.257324 20.629999 23.983999 c
20.629999 25.589342 21.042995 26.828329 21.868999 27.701 c
22.695004 28.573671 23.686661 29.01 24.844 29.01 c
25.861338 29.01 26.719997 28.690336 27.42 28.051001 c
28.120003 27.411663 28.530666 26.569338 28.652 25.524 c
26.944 25.257999 l
26.701332 26.742008 26.006006 27.483999 24.858 27.483999 c
24.13933 27.483999 23.539669 27.19467 23.059 26.615999 c
22.578331 26.037331 22.337999 25.150673 22.337999 23.955999 c
22.337999 22.733328 22.573664 21.821003 23.045 21.219 c
23.516336 20.616997 24.120663 20.316 24.858 20.316 c
26.080673 20.316 26.794666 21.155993 27 22.836 c
27 22.836 l
h
33.518749 20.232 m
34.06942 20.232 34.515083 20.448997 34.855751 20.882999 c
35.196419 21.317001 35.366749 21.925997 35.366749 22.709999 c
35.366749 23.494003 35.196419 24.102999 34.855751 24.537001 c
34.515083 24.971003 34.06942 25.188 33.518749 25.188 c
32.958748 25.188 32.508419 24.973335 32.167751 24.544001 c
31.827082 24.114664 31.65675 23.503338 31.65675 22.709999 c
31.65675 21.90733 31.827082 21.293669 32.167751 20.868999 c
32.508419 20.444332 32.958748 20.232 33.518749 20.232 c
33.518749 20.232 l
h
33.518749 18.790001 m
32.520077 18.790001 31.696421 19.13533 31.04775 19.826 c
30.39908 20.51667 30.074751 21.477993 30.074751 22.709999 c
30.074751 23.92334 30.408413 24.879997 31.07575 25.58 c
31.743086 26.280003 32.557411 26.629999 33.518749 26.629999 c
34.480087 26.629999 35.289745 26.280003 35.94775 25.58 c
36.605755 24.879997 36.93475 23.92334 36.93475 22.709999 c
36.93475 21.477993 36.615086 20.51667 35.97575 19.826 c
35.336414 19.13533 34.517422 18.790001 33.518749 18.790001 c
33.518749 18.790001 l
h
38.7635 19 m
38.7635 26.42 l
40.303501 26.42 l
40.303501 25.705999 l
40.331501 25.705999 l
40.536835 25.967335 40.821499 26.186666 41.185501 26.364 c
41.549503 26.541334 41.932163 26.629999 42.3335 26.629999 c
43.154839 26.629999 43.801163 26.385002 44.272499 25.895 c
44.743835 25.404997 44.9795 24.726004 44.9795 23.858 c
44.9795 19 l
43.397499 19 l
43.397499 23.438 l
43.397499 24.586006 42.91684 25.16 41.955502 25.16 c
41.470165 25.16 41.082836 25.02 40.793499 24.74 c
40.504166 24.459999 40.359501 24.082003 40.359501 23.606001 c
40.359501 19 l
38.7635 19 l
h
47.228249 19 m
47.228249 26.42 l
48.76825 26.42 l
48.76825 25.705999 l
48.796249 25.705999 l
49.001583 25.967335 49.286247 26.186666 49.650249 26.364 c
50.014252 26.541334 50.396915 26.629999 50.798248 26.629999 c
51.619587 26.629999 52.265915 26.385002 52.737251 25.895 c
53.208584 25.404997 53.444248 24.726004 53.444248 23.858 c
53.444248 19 l
51.862251 19 l
51.862251 23.438 l
51.862251 24.586006 51.381588 25.16 50.42025 25.16 c
49.934914 25.16 49.547585 25.02 49.258251 24.74 c
48.968914 24.459999 48.824249 24.082003 48.824249 23.606001 c
48.824249 19 l
47.228249 19 l
h
60.620998 21.464001 m
61.769001 20.525999 l
61.050331 19.36866 60.023674 18.790001 58.688999 18.790001 c
57.662327 18.790001 56.824669 19.146996 56.175999 19.861 c
55.527328 20.575003 55.202999 21.52466 55.202999 22.709999 c
55.202999 23.89534 55.524998 24.844995 56.168999 25.559 c
56.813004 26.273003 57.629662 26.629999 58.618999 26.629999 c
59.608337 26.629999 60.417995 26.275337 61.048 25.566 c
61.678001 24.856663 61.993 23.904673 61.993 22.709999 c
61.993 22.233999 l
56.813 22.233999 l
56.831665 21.617996 57.001999 21.125668 57.324001 20.757 c
57.646 20.388332 58.091663 20.204 58.660999 20.204 c
58.931667 20.204 59.174332 20.241333 59.389 20.316 c
59.603668 20.390667 59.792667 20.502666 59.956001 20.652 c
60.119335 20.801334 60.243 20.931999 60.327 21.044001 c
60.410999 21.156 60.508999 21.296 60.620998 21.464001 c
60.620998 21.464001 l
h
56.827 23.438 m
60.438999 23.438 l
60.410999 23.960669 60.243 24.387665 59.935001 24.719 c
59.626999 25.050335 59.188335 25.216 58.618999 25.216 c
58.086998 25.216 57.662334 25.038668 57.345001 24.684 c
57.027664 24.329332 56.855 23.914001 56.827 23.438 c
56.827 23.438 l
h
68.32975 21.954 m
69.911751 21.618 l
69.762413 20.721996 69.421753 20.026669 68.889748 19.532 c
68.35775 19.037331 67.653091 18.790001 66.775749 18.790001 c
65.767746 18.790001 64.94175 19.13533 64.297752 19.826 c
63.653748 20.51667 63.331749 21.477993 63.331749 22.709999 c
63.331749 23.89534 63.656078 24.844995 64.304749 25.559 c
64.953423 26.273003 65.772415 26.629999 66.761749 26.629999 c
67.611084 26.629999 68.311081 26.375669 68.861748 25.867001 c
69.412422 25.358332 69.734413 24.698004 69.827751 23.886 c
68.32975 23.634001 l
68.171082 24.670006 67.653091 25.188 66.775749 25.188 c
66.206413 25.188 65.753754 24.971003 65.417747 24.537001 c
65.081749 24.102999 64.91375 23.494003 64.91375 22.709999 c
64.91375 21.925997 65.07708 21.317001 65.403748 20.882999 c
65.730415 20.448997 66.187744 20.232 66.775749 20.232 c
67.643753 20.232 68.161751 20.805994 68.32975 21.954 c
68.32975 21.954 l
h
72.0205 21.478001 m
72.0205 25.048 l
70.900497 25.048 l
70.900497 26.42 l
72.0625 26.42 l
72.0625 28.24 l
73.574501 28.24 l
73.574501 26.42 l
75.436501 26.42 l
75.436501 25.048 l
73.588501 25.048 l
73.588501 21.646 l
73.588501 21.235331 73.651497 20.948334 73.777496 20.785 c
73.903503 20.621666 74.162498 20.540001 74.554497 20.540001 c
75.142502 20.540001 l
75.142502 19 l
74.428497 19 l
73.532494 19 72.907166 19.198332 72.552498 19.594999 c
72.19783 19.991669 72.0205 20.619329 72.0205 21.478001 c
72.0205 21.478001 l
h
81.991997 19 m
80.353996 26.42 l
81.921997 26.42 l
82.972 21.254 l
83 21.254 l
84.764 26.42 l
86.206001 26.42 l
87.858002 21.268 l
87.886002 21.268 l
89.075996 26.42 l
90.615997 26.42 l
88.837997 19 l
87.297997 19 l
85.491997 24.572001 l
85.463997 24.572001 l
83.517998 19 l
81.991997 19 l
h
92.402748 19 m
92.402748 26.42 l
93.998749 26.42 l
93.998749 19 l
92.402748 19 l
h
92.374748 27.638 m
92.374748 29.219999 l
94.026749 29.219999 l
94.026749 27.638 l
92.374748 27.638 l
h
96.695503 21.478001 m
96.695503 25.048 l
95.5755 25.048 l
95.5755 26.42 l
96.737503 26.42 l
96.737503 28.24 l
98.249496 28.24 l
98.249496 26.42 l
100.1115 26.42 l
100.1115 25.048 l
98.263496 25.048 l
98.263496 21.646 l
98.263496 21.235331 98.3265 20.948334 98.452499 20.785 c
98.578499 20.621666 98.837502 20.540001 99.2295 20.540001 c
99.817497 20.540001 l
99.817497 19 l
99.1035 19 l
98.207497 19 97.582169 19.198332 97.227501 19.594999 c
96.872833 19.991669 96.695503 20.619329 96.695503 21.478001 c
96.695503 21.478001 l
h
101.87025 19 m
101.87025 29.219999 l
103.46625 29.219999 l
103.46625 25.691999 l
103.49425 25.691999 l
103.66225 25.944002 103.93758 26.163332 104.32025 26.35 c
104.70292 26.536667 105.09025 26.629999 105.48225 26.629999 c
106.27559 26.629999 106.91958 26.387335 107.41425 25.902 c
107.90892 25.416664 108.15625 24.754004 108.15625 23.914 c
108.15625 19 l
106.57425 19 l
106.57425 23.535999 l
106.57425 24.021336 106.44359 24.413332 106.18225 24.712 c
105.92091 25.010668 105.54292 25.16 105.04825 25.16 c
104.57225 25.16 104.18958 25.02 103.90025 24.74 c
103.61092 24.459999 103.46625 24.100668 103.46625 23.662001 c
103.46625 19 l
101.87025 19 l
h
W*
0 0 193 48 rc
15.63 34.220001 m
113.15625 34.220001 l
113.15625 13.79 l
15.63 13.79 l
h
f
ep
end
%%Trailer
%%EOF
